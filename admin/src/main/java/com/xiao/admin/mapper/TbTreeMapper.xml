<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiao.admin.mapper.TbTreeMapper">
  <resultMap id="BaseResultMap" type="com.xiao.admin.entity.TbTree">
    <id column="tree_id" jdbcType="VARCHAR" property="treeId" />
    <result column="tree_type" jdbcType="VARCHAR" property="treeType" />
    <result column="tree_node_name" jdbcType="VARCHAR" property="treeNodeName" />
    <result column="tree_parent_id" jdbcType="VARCHAR" property="treeParentId" />
    <result column="tree_img" jdbcType="VARCHAR" property="treeImg" />
    <result column="tree_url" jdbcType="VARCHAR" property="treeUrl" />
    <result column="org_id" jdbcType="VARCHAR" property="orgId" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="tree_parent_name" jdbcType="VARCHAR" property="treeParentName" />
    <result column="tree_sort" jdbcType="VARCHAR" property="treeSort" />
    <result column="is_default" jdbcType="VARCHAR" property="isDefault" />
    <result column="post_rank_id" jdbcType="VARCHAR" property="postRankId" />
    <result column="post_rank_name" jdbcType="VARCHAR" property="postRankName" />
    <result column="compay_id" jdbcType="VARCHAR" property="compayId" />
    <result column="num" jdbcType="TINYINT" property="num" />
    <result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiao.admin.entity.TbTree">
    <result column="tree_desc" jdbcType="LONGVARCHAR" property="treeDesc" />
    <result column="post_obligation" jdbcType="LONGVARCHAR" property="postObligation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tree_id, tree_type, tree_node_name, tree_parent_id, tree_img, tree_url, org_id, update_user, 
    update_time, create_user, create_time, flag, tree_parent_name, tree_sort, is_default, 
    post_rank_id, post_rank_name, compay_id, num, sys_code
  </sql>
  <sql id="Blob_Column_List">
    tree_desc, post_obligation
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiao.admin.entity.TbTreeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--查询全部-->
  <select id="selectByExample" parameterType="com.xiao.admin.entity.TbTreeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--根据ID获取实体-->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_tree
    where tree_id = #{treeId,jdbcType=VARCHAR}
  </select>

  <!--删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_tree
    where tree_id = #{treeId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.xiao.admin.entity.TbTreeExample">
    delete from tb_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <!--添加-->
  <insert id="insert" parameterType="com.xiao.admin.entity.TbTree">
    insert into tb_tree (tree_id, tree_type, tree_node_name,
      tree_parent_id, tree_img, tree_url,
      org_id, update_user, update_time,
      create_user, create_time, flag,
      tree_parent_name, tree_sort, is_default,
      post_rank_id, post_rank_name, compay_id,
      num, sys_code, tree_desc,
      post_obligation)
    values (#{treeId,jdbcType=VARCHAR}, #{treeType,jdbcType=VARCHAR}, #{treeNodeName,jdbcType=VARCHAR},
      #{treeParentId,jdbcType=VARCHAR}, #{treeImg,jdbcType=VARCHAR}, #{treeUrl,jdbcType=VARCHAR},
      #{orgId,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR},
      #{treeParentName,jdbcType=VARCHAR}, #{treeSort,jdbcType=VARCHAR}, #{isDefault,jdbcType=VARCHAR},
      #{postRankId,jdbcType=VARCHAR}, #{postRankName,jdbcType=VARCHAR}, #{compayId,jdbcType=VARCHAR},
      #{num,jdbcType=TINYINT}, #{sysCode,jdbcType=VARCHAR}, #{treeDesc,jdbcType=LONGVARCHAR},
      #{postObligation,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.xiao.admin.entity.TbTree">
    insert into tb_tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        tree_id,
      </if>
      <if test="treeType != null">
        tree_type,
      </if>
      <if test="treeNodeName != null">
        tree_node_name,
      </if>
      <if test="treeParentId != null">
        tree_parent_id,
      </if>
      <if test="treeImg != null">
        tree_img,
      </if>
      <if test="treeUrl != null">
        tree_url,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="treeParentName != null">
        tree_parent_name,
      </if>
      <if test="treeSort != null">
        tree_sort,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="postRankId != null">
        post_rank_id,
      </if>
      <if test="postRankName != null">
        post_rank_name,
      </if>
      <if test="compayId != null">
        compay_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="sysCode != null">
        sys_code,
      </if>
      <if test="treeDesc != null">
        tree_desc,
      </if>
      <if test="postObligation != null">
        post_obligation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="treeType != null">
        #{treeType,jdbcType=VARCHAR},
      </if>
      <if test="treeNodeName != null">
        #{treeNodeName,jdbcType=VARCHAR},
      </if>
      <if test="treeParentId != null">
        #{treeParentId,jdbcType=VARCHAR},
      </if>
      <if test="treeImg != null">
        #{treeImg,jdbcType=VARCHAR},
      </if>
      <if test="treeUrl != null">
        #{treeUrl,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="treeParentName != null">
        #{treeParentName,jdbcType=VARCHAR},
      </if>
      <if test="treeSort != null">
        #{treeSort,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="postRankId != null">
        #{postRankId,jdbcType=VARCHAR},
      </if>
      <if test="postRankName != null">
        #{postRankName,jdbcType=VARCHAR},
      </if>
      <if test="compayId != null">
        #{compayId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=TINYINT},
      </if>
      <if test="sysCode != null">
        #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="treeDesc != null">
        #{treeDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="postObligation != null">
        #{postObligation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiao.admin.entity.TbTreeExample" resultType="java.lang.Integer">
    select count(*) from tb_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_tree
    <set>
      <if test="record.treeId != null">
        tree_id = #{record.treeId,jdbcType=VARCHAR},
      </if>
      <if test="record.treeType != null">
        tree_type = #{record.treeType,jdbcType=VARCHAR},
      </if>
      <if test="record.treeNodeName != null">
        tree_node_name = #{record.treeNodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParentId != null">
        tree_parent_id = #{record.treeParentId,jdbcType=VARCHAR},
      </if>
      <if test="record.treeImg != null">
        tree_img = #{record.treeImg,jdbcType=VARCHAR},
      </if>
      <if test="record.treeUrl != null">
        tree_url = #{record.treeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParentName != null">
        tree_parent_name = #{record.treeParentName,jdbcType=VARCHAR},
      </if>
      <if test="record.treeSort != null">
        tree_sort = #{record.treeSort,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=VARCHAR},
      </if>
      <if test="record.postRankId != null">
        post_rank_id = #{record.postRankId,jdbcType=VARCHAR},
      </if>
      <if test="record.postRankName != null">
        post_rank_name = #{record.postRankName,jdbcType=VARCHAR},
      </if>
      <if test="record.compayId != null">
        compay_id = #{record.compayId,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=TINYINT},
      </if>
      <if test="record.sysCode != null">
        sys_code = #{record.sysCode,jdbcType=VARCHAR},
      </if>
      <if test="record.treeDesc != null">
        tree_desc = #{record.treeDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.postObligation != null">
        post_obligation = #{record.postObligation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_tree
    set tree_id = #{record.treeId,jdbcType=VARCHAR},
      tree_type = #{record.treeType,jdbcType=VARCHAR},
      tree_node_name = #{record.treeNodeName,jdbcType=VARCHAR},
      tree_parent_id = #{record.treeParentId,jdbcType=VARCHAR},
      tree_img = #{record.treeImg,jdbcType=VARCHAR},
      tree_url = #{record.treeUrl,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=VARCHAR},
      tree_parent_name = #{record.treeParentName,jdbcType=VARCHAR},
      tree_sort = #{record.treeSort,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      post_rank_id = #{record.postRankId,jdbcType=VARCHAR},
      post_rank_name = #{record.postRankName,jdbcType=VARCHAR},
      compay_id = #{record.compayId,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=TINYINT},
      sys_code = #{record.sysCode,jdbcType=VARCHAR},
      tree_desc = #{record.treeDesc,jdbcType=LONGVARCHAR},
      post_obligation = #{record.postObligation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_tree
    set tree_id = #{record.treeId,jdbcType=VARCHAR},
      tree_type = #{record.treeType,jdbcType=VARCHAR},
      tree_node_name = #{record.treeNodeName,jdbcType=VARCHAR},
      tree_parent_id = #{record.treeParentId,jdbcType=VARCHAR},
      tree_img = #{record.treeImg,jdbcType=VARCHAR},
      tree_url = #{record.treeUrl,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=VARCHAR},
      tree_parent_name = #{record.treeParentName,jdbcType=VARCHAR},
      tree_sort = #{record.treeSort,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      post_rank_id = #{record.postRankId,jdbcType=VARCHAR},
      post_rank_name = #{record.postRankName,jdbcType=VARCHAR},
      compay_id = #{record.compayId,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=TINYINT},
      sys_code = #{record.sysCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiao.admin.entity.TbTree">
    update tb_tree
    <set>
      <if test="treeType != null">
        tree_type = #{treeType,jdbcType=VARCHAR},
      </if>
      <if test="treeNodeName != null">
        tree_node_name = #{treeNodeName,jdbcType=VARCHAR},
      </if>
      <if test="treeParentId != null">
        tree_parent_id = #{treeParentId,jdbcType=VARCHAR},
      </if>
      <if test="treeImg != null">
        tree_img = #{treeImg,jdbcType=VARCHAR},
      </if>
      <if test="treeUrl != null">
        tree_url = #{treeUrl,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="treeParentName != null">
        tree_parent_name = #{treeParentName,jdbcType=VARCHAR},
      </if>
      <if test="treeSort != null">
        tree_sort = #{treeSort,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="postRankId != null">
        post_rank_id = #{postRankId,jdbcType=VARCHAR},
      </if>
      <if test="postRankName != null">
        post_rank_name = #{postRankName,jdbcType=VARCHAR},
      </if>
      <if test="compayId != null">
        compay_id = #{compayId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=TINYINT},
      </if>
      <if test="sysCode != null">
        sys_code = #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="treeDesc != null">
        tree_desc = #{treeDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="postObligation != null">
        post_obligation = #{postObligation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where tree_id = #{treeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiao.admin.entity.TbTree">
    update tb_tree
    set tree_type = #{treeType,jdbcType=VARCHAR},
      tree_node_name = #{treeNodeName,jdbcType=VARCHAR},
      tree_parent_id = #{treeParentId,jdbcType=VARCHAR},
      tree_img = #{treeImg,jdbcType=VARCHAR},
      tree_url = #{treeUrl,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=VARCHAR},
      tree_parent_name = #{treeParentName,jdbcType=VARCHAR},
      tree_sort = #{treeSort,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=VARCHAR},
      post_rank_id = #{postRankId,jdbcType=VARCHAR},
      post_rank_name = #{postRankName,jdbcType=VARCHAR},
      compay_id = #{compayId,jdbcType=VARCHAR},
      num = #{num,jdbcType=TINYINT},
      sys_code = #{sysCode,jdbcType=VARCHAR},
      tree_desc = #{treeDesc,jdbcType=LONGVARCHAR},
      post_obligation = #{postObligation,jdbcType=LONGVARCHAR}
    where tree_id = #{treeId,jdbcType=VARCHAR}
  </update>

  <!--修改-->
  <update id="updateByPrimaryKey" parameterType="com.xiao.admin.entity.TbTree">
    update tb_tree
    set tree_type = #{treeType,jdbcType=VARCHAR},
      tree_node_name = #{treeNodeName,jdbcType=VARCHAR},
      tree_parent_id = #{treeParentId,jdbcType=VARCHAR},
      tree_img = #{treeImg,jdbcType=VARCHAR},
      tree_url = #{treeUrl,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=VARCHAR},
      tree_parent_name = #{treeParentName,jdbcType=VARCHAR},
      tree_sort = #{treeSort,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=VARCHAR},
      post_rank_id = #{postRankId,jdbcType=VARCHAR},
      post_rank_name = #{postRankName,jdbcType=VARCHAR},
      compay_id = #{compayId,jdbcType=VARCHAR},
      num = #{num,jdbcType=TINYINT},
      sys_code = #{sysCode,jdbcType=VARCHAR}
    where tree_id = #{treeId,jdbcType=VARCHAR}
  </update>
</mapper>